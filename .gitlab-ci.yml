stages:
    - compile
    - build
    - release
    - deploy
variables:
    HUB_URL: hub.skatekrak.com/web/skatekrak.com
    HUB_PROD: gcr.io/krakbackend/skatekrak
    TEST_TAG: testing
    BARDE_URL: 'https://barde.skatekrak.com'
before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN hub.skatekrak.com
compile_production:
    image: 'node:8'
    stage: compile
    before_script:
        - 'echo -e "registry=https://npm.skatekrak.com/" > .npmrc'
        - 'echo -e "//npm.skatekrak.com/:always-auth=true" >> .npmrc'
        - >-
            echo -e "//npm.skatekrak.com/:_authToken=${NPM_AUTH_TOKEN}" >>
            .npmrc
    script:
        - npm install
        - npm run build
    only:
        - tags
    artifacts:
        name: '${CI_PIPELINE_ID}'
        paths:
            - out
build:
    stage: build
    script:
        - 'docker build --pull -t $HUB_URL:$TEST_TAG .'
        - 'docker push $HUB_URL:$TEST_TAG'
    only:
        - tags
    when: on_success
release_production:
    stage: release
    tags:
        - kube
    script:
        - 'docker pull $HUB_URL:$TEST_TAG'
        - 'docker tag $HUB_URL:$TEST_TAG $HUB_PROD:$CI_COMMIT_TAG'
        - 'gcloud docker -- push $HUB_PROD:$CI_COMMIT_TAG'
    only:
        - tags
    when: on_success
deploy_production:
    stage: deploy
    tags:
        - kube
    environment:
        name: production
        url: 'https://skatekrak.com'
    script:
        - >-
            kubectl set image deployment/krakbox
            krakbox=$HUB_PROD:$CI_COMMIT_TAG
        - kubectl rollout status deployment/krakbox
        - kubectl describe deployment krakbox
    only:
        - tags
    when: manual
